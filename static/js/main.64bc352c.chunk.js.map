{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","onGood","onNeutral","onBad","className","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","props","defaultGood","defaultNeutral","defaultBad","handleGood","setState","prev","handleNeutral","handleBad","countTotalFeedback","countPositiveFeedbackPercentage","percentage","resume","Math","floor","this","Component","defaultProps","defaultTotal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAgCeA,EA5BS,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,MAArB,OACpB,mCACI,qBAAIC,UAAU,UAAd,UACE,oBAAIA,UAAU,SAAd,SACE,wBAAQC,KAAK,SACbD,UAAU,iBACVE,QAASL,EAFT,oBAIF,oBAAIG,UAAU,SAAd,SACE,wBAAQC,KAAK,SACbD,UAAU,iBACVE,QAASJ,EAFT,uBAIF,oBAAIE,UAAU,SAAd,SACE,wBAAQC,KAAK,SACbD,UAAU,iBACVE,QAASH,EAFT,yBCmBGI,G,MAjCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAIR,UAAU,oBAAd,wBACA,+BACE,oBAAIA,UAAU,mBAAd,SACE,uCAAUI,OAEZ,oBAAIJ,UAAU,mBAAd,SACE,0CAAaK,OAEf,oBAAIL,UAAU,mBAAd,SACE,sCAASM,OAEX,oBAAIN,UAAU,mBAAd,SACE,wCAAWO,OAEb,oBAAIP,UAAU,mBAAd,SACE,oDAAuBQ,EAAvB,iBCPKC,G,MAXC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,0BAASX,UAAU,UAAnB,UACI,oBAAIA,UAAU,iBAAd,SAAgCU,IAC/BC,OCKMC,G,MARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mBAAGb,UAAU,eAAb,SAA6Ba,MCG3BC,E,4MAOJC,MAAQ,CACNX,KAAM,EAAKY,MAAMC,YACjBZ,QAAS,EAAKW,MAAME,eACpBZ,IAAK,EAAKU,MAAMG,Y,EAGlBC,WAAa,WACX,EAAKC,UAAS,SAACC,GAAD,MAAW,CACvBlB,KAAMkB,EAAKlB,KAAO,O,EAItBmB,cAAgB,WACd,EAAKF,UAAS,SAACC,GAAD,MAAW,CACvBjB,QAASiB,EAAKjB,QAAU,O,EAI5BmB,UAAY,WACV,EAAKH,UAAS,SAACC,GAAD,MAAW,CACvBhB,IAAKgB,EAAKhB,IAAM,O,EAIpBmB,mBAAqB,WAEnB,OADc,EAAKV,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAIlEoB,gCAAkC,WAChC,IAAIC,EAAa,EACjB,GAAwB,IAApB,EAAKZ,MAAMX,KAAY,CACzB,IAAIwB,EAA4B,IAAnB,EAAKb,MAAMX,KAAc,EAAKqB,qBAC3CE,EAAaE,KAAKC,MAAMF,GAE1B,OAAOD,G,4CAGT,WACE,MAA+BI,KAAKhB,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACA,eAAC,EAAD,CAASI,MAAM,wBAAf,UACI,cAAC,EAAD,CACEb,OAAQkC,KAAKX,WACbtB,UAAWiC,KAAKR,cAChBxB,MAAOgC,KAAKP,YACiB,IAA9BO,KAAKN,qBAA6B,cAAC,EAAD,CACjCrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKN,qBACZjB,mBAAoBuB,KAAKL,oCACzB,cAAC,EAAD,CAAcb,QAAQ,6B,GA5DdmB,aAAZlB,EACGmB,aAAe,CACpBhB,YAAa,EACbC,eAAgB,EAChBC,WAAY,EACZe,aAAc,GA6DHpB,QCpEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64bc352c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({onGood, onNeutral, onBad}) => (\r\n    <>\r\n        <ul className=\"Options\">\r\n          <li className=\"Option\">\r\n            <button type=\"button\" \r\n            className=\"Option__button\"\r\n            onClick={onGood}>good</button>\r\n          </li>\r\n          <li className=\"Option\">\r\n            <button type=\"button\" \r\n            className=\"Option__button\"\r\n            onClick={onNeutral}>neutral</button>\r\n          </li>\r\n          <li className=\"Option\">\r\n            <button type=\"button\" \r\n            className=\"Option__button\"\r\n            onClick={onBad}>bad</button>\r\n          </li>\r\n        </ul>\r\n    </>\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n    onGood: PropTypes.func.isRequired,\r\n    onNeutral: PropTypes.func.isRequired,\r\n    onBad: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"Statistics__title\">Statistics</h2>\r\n      <ul>\r\n        <li className=\"Statistics__item\">\r\n          <p>Good: {good}</p>\r\n        </li>\r\n        <li className=\"Statistics__item\">\r\n          <p>Neutral: {neutral}</p>\r\n        </li>\r\n        <li className=\"Statistics__item\">\r\n          <p>Bad: {bad}</p>\r\n        </li>\r\n        <li className=\"Statistics__item\">\r\n          <p>Total: {total}</p>\r\n        </li>\r\n        <li className=\"Statistics__item\">\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './Section.css';\r\n\r\nconst Section = ({title, children}) => (\r\n    <section className=\"Section\">\r\n        <h1 className=\"Section__title\">{title}</h1>\r\n        {children}\r\n    </section>\r\n)\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './Notification.css';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p className=\"Notification\">{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\n\nclass App extends Component {\n  static defaultProps = {\n    defaultGood: 0,\n    defaultNeutral: 0,\n    defaultBad: 0,\n    defaultTotal: 0,\n  }\n  state = {\n    good: this.props.defaultGood,\n    neutral: this.props.defaultNeutral,\n    bad: this.props.defaultBad,\n  }\n\n  handleGood = () => {\n    this.setState((prev) => ({\n      good: prev.good + 1,\n    }))\n  }\n\n  handleNeutral = () => {\n    this.setState((prev) => ({\n      neutral: prev.neutral + 1,\n    }))\n  }\n\n  handleBad = () => {\n    this.setState((prev) => ({\n      bad: prev.bad + 1,\n    }))\n  }\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total\n  };\n  \n  countPositiveFeedbackPercentage = () => {\n    let percentage = 0;\n    if (this.state.good !== 0) {\n      let resume = this.state.good  * 100 / this.countTotalFeedback();\n      percentage = Math.floor(resume);\n    }\n    return percentage;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n    <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onGood={this.handleGood}\n          onNeutral={this.handleNeutral}\n          onBad={this.handleBad}/>\n        {this.countTotalFeedback() !== 0 ? <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()} /> :\n          <Notification message=\"No feedback given\" />}\n    </Section>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}